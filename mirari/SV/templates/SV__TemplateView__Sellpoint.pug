-load static
-load i18n

// Layout wrapper
.layout-wrapper.layout-1
    .layout-inner
        // Layout container
        .layout-container
            // Layout sidenav
            #layout-sidenav.layout-sidenav.sidenav.sidenav-vertical
                // Links                
                ul.sidenav-inner.py-0
                    component-menu(v-for="menu in Menus" v-if="menu.is_root_node" :menu="menu" :menus="Menus")
            // Layout content
            .layout-content
                // Content
                .container-fluid.d-flex.align-items-stretch.flex-grow-1.p-0
                    .flex-shrink-1.flex-grow-0.w-30.bg-light.px-1.py-1(style="min-width: 290px;max-width: 290px;")
                        // Teclado
                        .card.d-flex.w-100.mb-1
                            .row.no-gutters.row-bordered.row-border-light.h-100
                                .d-flex.col-sm-12.align-items-center
                                    button.btn.btn-default.card-body.align-items-center.text-dark.text-center.py-2
                                        span.media-body.d-block
                                            span.text-big.font-weight-bolder ${Quantity}
                            .row.no-gutters.row-bordered.row-border-light.h-100
                                template(v-if="ShowKeyboard")
                                    .d-flex.col-sm-4.align-items-center(v-for="index in Keyboard" :key="index")
                                        button.btn.btn-default.card-body.align-items-center.text-dark.text-center.waves-effect(v-on:click="keyboard(index)")
                                            span.media-body.d-block
                                                span.text-big.font-weight-bolder ${index}
                                .d-flex.col-sm-4.align-items-center
                                    button.btn.btn-default.btn-xl.card-body.align-items-center.text-center.waves-effect(v-on:click="initTicket()")
                                        span.media-body.d-block
                                            span.fas.fa-trash.text-danger
                                .d-flex.col-sm-4.align-items-center
                                    button.btn.btn-default.btn-xl.card-body.align-items-center.text-center.waves-effect(v-on:click="ShowKeyboard = !ShowKeyboard")
                                        span.media-body.d-block
                                            span.fas(:class="{'fa-angle-up':ShowKeyboard,'fa-angle-down':(!ShowKeyboard)}")
                                .d-flex.col-sm-4.align-items-center(v-if="$route.query.sellpointMode=='order'")
                                    button.btn.btn-default.btn-xl.card-body.align-items-center.text-center.waves-effect(v-on:click="getDataOrder()"  :disabled="Ticket.products.length<1")
                                        span.media-body.d-block
                                            span.fas.fa-receipt.text-success
                                .d-flex.col-sm-4.align-items-center(v-if="$route.query.sellpointMode=='sellpoint'")
                                    button.btn.btn-default.btn-xl.card-body.align-items-center.text-center.waves-effect(v-on:click="getBarCode()"  :disabled="Ticket.products.length<1")
                                        span.media-body.d-block
                                            span.fas.fa-print.text-primary
                                .d-flex.col-sm-12.align-items-center(v-if="$route.query.sellpointMode=='order'")
                                    p.px-2.py-2.mb-0 
                                        span(v-if="Client.id == 0 && Client.name == ''") PUBLICO EN GENERAL
                                        span(v-else) ${Client.name}
                                        .text-muted.small ${Client.id}
                        div(v-if="Ticket")
                            .card-body.d-flex.justify-content-between.py-1(v-for="line in Ticket.products" @click="deleteProductLine(line)")
                                .text-large ${line.quantity}
                                .text-right.small
                                    .badge.badge-outline-danger.mr-1(v-for="offer in line.offers")
                                        | ${offer.name}
                                    span.text-danger(v-if="line.offerprice < line.price") $ ${line.offerprice|formatPrice}
                                    span(v-else) $ ${line.price|formatPrice}
                                    br
                                    strong ${line.productName}
                    .flex-shrink-1.flex-grow-1.px-1.py-1
                        div(v-if="Sellpoint && Menu")
                            .d-flex.flex-md-column.flex-wrap.justify-content-md-center.align-items-center.masonry-item(v-for="productattribute in ProductAttributes" v-on:click="addProduct(productattribute)" v-if="activeProduct(productattribute)" :style="{ borderColor: Menu.color }")
                                .filter-img(:style="{ 'background':'url('+ getPhoto(productattribute)  +') center center', 'background-size': 'cover' }")
                                .text-big.text-black
                                    strong $ ${productattribute.price|formatPrice}
                                p.text-center.mb-0.text-black.text-big
                                    | ${productattribute.product.name}
                                p.text-center.mb-0.text-black(v-if="productattribute.product.description")
                                    small ${productattribute.product.description}
                            div(v-if="Menu.id == 0")
                                .d-flex.flex-md-column.flex-wrap.justify-content-md-center.align-items-center.masonry-item(v-on:click="offer.isOffer=true; addProduct(offer)" style="border-color: #862828;background-color:#862828;color:white;" v-for="offer in Offers" v-if="offer.discountType=='totalPercent'")
                                    .text-big
                                        strong ${offer.discountValue} % 
                                    p
                                        | ${offer.name}
                                .d-flex.flex-md-column.flex-wrap.justify-content-md-center.align-items-center.masonry-item(v-for="productattribute in ProductAttributes" v-on:click="addProduct(productattribute)" v-if="productattribute.is_favorite" :style="{borderColor:Menu.color}")
                                    .filter-img(:style="{ 'background':'url('+ getPhoto(productattribute)  +') center center', 'background-size': 'cover' }")
                                    .text-big.text-black
                                        strong $ ${productattribute.price|formatPrice}
                                    p.text-center.mb-0.text-black.text-big
                                        | ${productattribute.product.name}
                                    p.text-center.mb-0.text-black(v-if="productattribute.product.description")
                                        small ${productattribute.product.description}
                                                
                // Layout footer
                nav.layout-footer.footer.bg-footer-theme
                    .container-fluid.d-flex.flex-wrap.justify-content-between.text-center.container-p-x.pb-3
                        .pt-3(v-if="Ticket")
                            span.footer-text.font-weight-bolder.px-3.h4 $ ${Ticket.total|formatPrice}
                        include SV__TemplateView__Footer.pug
    .layout-overlay.layout-sidenav-toggle