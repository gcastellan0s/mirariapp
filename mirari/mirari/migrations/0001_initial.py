# Generated by Django 2.0.5 on 2018-09-11 20:51

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import imagekit.models.fields
import mirari.mirari.models
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('auth', '0009_alter_user_last_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('active', models.BooleanField(default=True)),
                ('visible_username', models.CharField(help_text='Obligatorio. Longitud máxima 30 caracteres alfanuméricos (letras, dígitos y @/./+/-/_) solamente.', max_length=50, verbose_name='Usuario')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Fecha nacimiento')),
                ('first_login', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telefono de contacto')),
                ('extention', models.CharField(blank=True, max_length=50, null=True, verbose_name='Extensión Telefónica')),
                ('gender', models.CharField(blank=True, choices=[('Hombre', 'Hombre'), ('Mujer', 'Mujer'), ('Otro', 'Otro')], max_length=50, null=True, verbose_name='Género')),
                ('origin', django_countries.fields.CountryField(blank=True, default='MX', max_length=2, null=True, verbose_name='País de origen')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-id'],
                'permissions': [('Can_View__User', 'Ve usuarios'), ('Can_Create__User', 'Crea usuarios'), ('Can_Update__User', 'Modifica usuarios'), ('Can_Delete__User', 'Elimina usuarios'), ('Can_Change__Password', 'Modifica contraseñas')],
                'abstract': False,
                'default_permissions': [],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Módulo',
                'verbose_name_plural': 'Módulos',
                'ordering': ['-id'],
                'permissions': [],
                'abstract': False,
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('nivel', models.PositiveIntegerField(default=1)),
                ('name', models.CharField(max_length=50, verbose_name='Nombre de la organización')),
                ('code', models.CharField(max_length=150, unique=True)),
                ('default_mail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email de la sucursal')),
                ('contact_mail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email de contacto para clientes')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('TITLE', models.CharField(blank=True, max_length=255, null=True)),
                ('SLOGAN', models.CharField(blank=True, max_length=255, null=True)),
                ('LAYOUT', models.CharField(blank=True, max_length=255, null=True)),
                ('STYLE', models.CharField(blank=True, max_length=255, null=True)),
                ('ICO', imagekit.models.fields.ProcessedImageField(blank=True, help_text='Logo 100x100', null=True, upload_to=mirari.mirari.models.path_system)),
                ('LOGO', imagekit.models.fields.ProcessedImageField(blank=True, help_text='Logo 600x600', null=True, upload_to=mirari.mirari.models.path_system)),
                ('LOGO_WHITE', imagekit.models.fields.ProcessedImageField(blank=True, help_text='Logo 600x600', null=True, upload_to=mirari.mirari.models.path_system)),
                ('LOGO_BG', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=mirari.mirari.models.path_system)),
                ('LOGO_BG_WHITE', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to=mirari.mirari.models.path_system)),
                ('REGISTER', models.BooleanField(default=True)),
                ('FACEBOOK', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('modules', models.ManyToManyField(blank=True, related_name='_organization_modules_+', to='mirari.Module')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='mirari.Organization')),
                ('sites', models.ManyToManyField(to='sites.Site')),
            ],
            options={
                'verbose_name': 'Organización',
                'verbose_name_plural': 'Organizaciones',
                'ordering': ['-id'],
                'permissions': [('Can_View__Organization', 'Ve organizaciones')],
                'abstract': False,
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ProductsServicesSAT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('code', models.CharField(max_length=120, verbose_name='Código de producto o servicio')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre de producto o servicio')),
                ('iva_transladado', models.BooleanField(default=False)),
                ('ieps_transladado', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('tipo', models.CharField(blank=True, max_length=120, null=True)),
                ('division', models.CharField(blank=True, max_length=120, null=True)),
                ('grupo', models.CharField(blank=True, max_length=120, null=True)),
                ('clase', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'verbose_name': 'Producto o Servicio',
                'verbose_name_plural': 'Productos o servicios',
                'ordering': ['-id'],
                'permissions': [('Can_View__ProductsServicesSAT', 'Ve productos o servicios'), ('Can_Create__ProductsServicesSAT', 'Crea productos o servicios'), ('Can_Update__ProductsServicesSAT', 'Modifica productos o servicios'), ('Can_Delete__ProductsServicesSAT', 'Elimina productos o servicios')],
                'abstract': False,
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('active', models.BooleanField(default=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='mirari.Organization')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfiles',
                'ordering': ['-id'],
                'permissions': [('Can_View__Profile', 'Ve perfiles'), ('Can_Create__Profile', 'Crea perfiles'), ('Can_Update__Profile', 'Modifica perfiles'), ('Can_Delete__Profile', 'Elimina perfiles')],
                'abstract': False,
                'default_permissions': [],
            },
            bases=('auth.group', models.Model),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Serial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=120, verbose_name='Nombre con el que identificas la serie')),
                ('serial', models.PositiveIntegerField(default=1)),
                ('is_global', models.BooleanField(default=False, verbose_name='Serie compartida?')),
                ('is_visible', models.BooleanField(default=False, verbose_name='Esta disponible?')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='mirari.Organization')),
            ],
            options={
                'verbose_name': 'Serie',
                'verbose_name_plural': 'Series',
                'ordering': ['-id'],
                'permissions': [('Can_View__Serial', 'Ve series'), ('Can_Create__Serial', 'Crea series'), ('Can_Update__Serial', 'Modifica series'), ('Can_Delete__Serial', 'Elimina series')],
                'abstract': False,
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='UnitsCodesSat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('code', models.CharField(max_length=120, verbose_name='Código de producto o servicio')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre de producto o servicio')),
            ],
            options={
                'verbose_name': 'Clave Unidad',
                'verbose_name_plural': 'Clave de Unidades',
                'ordering': ['-id'],
                'permissions': [('Can_View__UnitsCodesSat', 'Ve clave de unidades'), ('Can_Create__UnitsCodesSat', 'Crea clave de unidades'), ('Can_Update__UnitsCodesSat', 'Modifica clave de unidades'), ('Can_Delete__UnitsCodesSat', 'Elimina clave de unidades')],
                'abstract': False,
                'default_permissions': [],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='mirari.Organization'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
